@page "/login"
@using MudBlazorTest.Client.Authentication
@using System.Net
@inject HttpClient httpClient
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@attribute [AllowAnonymous]

  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col col-xl-10">
        <div class="card" style="border-radius: 1rem;">
          <div class="row g-0">
            <div class="col-md-6 col-lg-5 d-none d-md-block">
              <img src="./img/banner-login.jpg"
                alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem;" />
            </div>
            <div class="col-md-6 col-lg-7 d-flex align-items-center">
              <div class="card-body p-4 p-lg-5 text-black">

                <form>

                  <div class="d-flex align-items-center mb-3 pb-1">
                    <img src="./img/homepetcare-logo.png"
                     alt="Homepet Care" class="img-fluid" style="width: 70px;"/>
                    <span class="h1 fw-bold mb-0">HomePetCare</span>
                  </div>

                  <h5 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Inicie sesión en su cuenta</h5>

                  <div class="form-outline mb-4">
                    <label class="form-label">Usuario</label>
                    <input @bind="loginRequest.UserName" class="form-control form-control-lg" />
                  </div>

                  <div class="form-outline mb-4">
                    <label class="form-label">Contraseña</label>
                    <input @bind="loginRequest.Password" type="password" class="form-control form-control-lg" />
                  </div>

                  <div class="pt-1 mb-4">
                    <button @onclick="Authenticate" class="btn btn-dark btn-lg btn-block" type="button">Iniciar Sesion</button>
                  </div>
                </form>

              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
@code {
    private LoginRequest loginRequest = new LoginRequest();

    private async Task Authenticate()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginRequest>("/api/Account/Login", loginRequest);

        if (loginResponse.IsSuccessStatusCode)
        {
            var userSession = await loginResponse.Content.ReadFromJsonAsync<UserSession>();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(userSession);
            navManager.NavigateTo("/", true);
        }
        else if (loginResponse.StatusCode == HttpStatusCode.Unauthorized)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }
    }
}